import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import TreeSvg from "../public/images/TreeSvg.svg";
import * as DropdownMenu from "@radix-ui/react-dropdown-menu";
import { HamburgerMenuIcon } from "@radix-ui/react-icons";
import background from "../public/images/treeSurgeon.jpg";
import { useState, useEffect } from "react";
import { useForm } from "react-hook-form";

const Home: NextPage = () => {
  const [openDropwdown, setOpenDropdown] = useState(false);
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm();

  const onSubmit = (data: any) => console.log(data);

  useEffect(() => {
    document.addEventListener("scroll", () => setOpenDropdown(false));
  }, []);

  console.log(errors);

  return (
    <div className="flex min-h-screen flex-col items-center bg-dull w-full">
      <Head>
        <title>ArbSOS</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/images/TreeSvg.svg" />
      </Head>

      <header className="w-full flex px-2 justify-between bg-green max-w-screen fixed z-50">
        <div className="flex">
          <TreeSvg className="w-12 h-12" />
          <h1 className="text-3xl p-2 font-semibold">ArbSOS</h1>
        </div>
        <DropdownMenu.Root
          modal={false}
          open={openDropwdown}
          onOpenChange={() => setOpenDropdown(!openDropwdown)}
        >
          <DropdownMenu.Trigger>
            <HamburgerMenuIcon className="w-8 h-8" />
          </DropdownMenu.Trigger>
          <DropdownMenu.Content
            align="start"
            className="border-2 border-darkGreen font-medium lg:text-xl rounded-md bg-green"
          >
            <DropdownMenu.Arrow
              className="fill-green w-6 h-4 -mt-1"
              offset={10}
            ></DropdownMenu.Arrow>
            <DropdownMenu.Item className="p-2 lg:px-4">About</DropdownMenu.Item>
            <DropdownMenu.Item className="p-2 lg:px-4 border-t-2 border-darkGreen">
              Services
            </DropdownMenu.Item>
            <DropdownMenu.Item className="p-2 lg:px-4 border-t-2 border-darkGreen">
              Contact
            </DropdownMenu.Item>
          </DropdownMenu.Content>
        </DropdownMenu.Root>
      </header>

      <main className="w-full flex flex-col items-center">
        <div
          className="bg-cover bg-no-repeat bg-fixed bg-center w-full min-h-screen"
          style={{ backgroundImage: `url(${background.src})` }}
        ></div>
        <section className="bg-black/30 w-[90%] p-4 lg:w-3/4 absolute top-8 mt-16 z-10 border-2 border-darkGreen rounded-lg ">
          <div className="flex flex-col w-full text-center space-y-4">
            <div className="flex items-center w-full justify-center">
              <TreeSvg className="w-16 h-16  md:w-32 md:h-32  fill-green" />
              <p className="text-green text-6xl md:text-9xl text-center">
                ArbSOS
              </p>
            </div>
            <p className="bg-dull/90 w-max mx-auto p-2 rounded-md z-50 text-black border-2 border-darkGreen">
              Description and call to action
            </p>
          </div>
        </section>
        <section>
          <h1>Services</h1>
        </section>
        <section className="flex flex-col w-full text-white bg-[#002916] space-y-8 items-center ">
          <div className="p-4 w-full flex flex-col md:flex-row md:space-x-6 justify-evenly">
            <TreeSvg className="w-24 h-24 fill-white hidden md:block" />
            <div className="flex md:block justify-between">
              <p>
                <b>Address</b> <br /> 4 The Hill <br />
                Merrywalks <br /> Stroud <br />
                GL5 4EP
              </p>
              <TreeSvg className="w-24 h-24 fill-white visible md:hidden " />
            </div>

            <p>
              <b>Phone</b> <br /> 01234 567890
            </p>
            <p>
              <b>Email</b> <br /> paul@arbsos.co.uk
            </p>
          </div>
          <p className="text-2xl pt-4 border-t px-12 md:px-24 xl:px-36 3xl:px-72">
            Contact Form
          </p>
          <form
            className="flex flex-col space-y-4 pb-4 w-full px-4 max-w-sm lg:max-w-lg 3xl:max-w-2xl"
            onSubmit={handleSubmit(onSubmit)}
          >
            <div className="flex flex-col md:flex-row w-full md:space-x-4 space-y-2 md:space-y-0">
              <label htmlFor="name" className="">
                Name*:{" "}
                <input
                  type="text"
                  className="w-full text-black"
                  {...register("name", { required: "Name is required" })}
                ></input>
                {errors.name && (
                  <p className="text-red-500 font-light">
                    {errors.name.message}
                  </p>
                )}
              </label>
              <label htmlFor="email" className="">
                Email*:{" "}
                <input
                  type="text"
                  className="w-full text-black"
                  {...register("email", {
                    required: "Email is required",
                    pattern: {
                      value: /^[^\s@]+@[^\s@]+\.[^\s@]+$/,
                      message: "Enter a valid email",
                    },
                  })}
                ></input>
                {errors.email && (
                  <p className="text-red-500 font-light">
                    {errors.email.message}
                  </p>
                )}
              </label>
              <label htmlFor="phone" className="">
                Phone:{" "}
                <input
                  type="text"
                  className="w-full text-black"
                  {...register("phone")}
                ></input>
              </label>
            </div>
            <label htmlFor="message" className="">
              Message*:{" "}
              <textarea
                className="w-full text-black"
                {...register("message", { required: "Message is required" })}
              ></textarea>
              {errors.message && (
                <p className="text-red-500 font-light">
                  {errors.message.message}
                </p>
              )}
            </label>
            <input
              type="submit"
              onClick={(e: any) => e.target?.blur()}
              className="border-green border w-fit place-self-center p-2 bg-green text-white text-xl hover:scale-110 transition duration-300 focus:scale-90 rounded-md"
            />
          </form>
        </section>
      </main>
    </div>
  );
};

export default Home;
